[{"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/index.js":"1","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/server.js":"2","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/config.js":"3","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/config/mongo.js":"4","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/users/users.router.js":"5","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/auth/auth.router.js":"6","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/auth/auth.controller.js":"7","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/users/users.controller.js":"8","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/users/users.model.js":"9","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/categories/categories.router.js":"10","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/categories/categories.controller.js":"11","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/categories/categories.model.js":"12","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/products/products.router.js":"13","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/products/products.controller.js":"14","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/products/products.model.js":"15","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/messages/messages.router.js":"16","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/messages/messages.controller.js":"17","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/messages/messages.model.js":"18","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/notifications/notifications.router.js":"19","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/notifications/notifications.controller.js":"20","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/notifications/notifications.model.js":"21","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/tags/tags.router.js":"22","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/tags/tags.controller.js":"23","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/tags/tags.model.js":"24"},{"size":118,"mtime":1611677923069,"results":"25","hashOfConfig":"26"},{"size":1616,"mtime":1611677943741,"results":"27","hashOfConfig":"26"},{"size":147,"mtime":1611411582917,"results":"28","hashOfConfig":"26"},{"size":654,"mtime":1611411877520,"results":"29","hashOfConfig":"26"},{"size":343,"mtime":1611406729497,"results":"30","hashOfConfig":"26"},{"size":195,"mtime":1611412224702,"results":"31","hashOfConfig":"26"},{"size":490,"mtime":1611412224698,"results":"32","hashOfConfig":"26"},{"size":988,"mtime":1611409462512,"results":"33","hashOfConfig":"26"},{"size":1413,"mtime":1611412185334,"results":"34","hashOfConfig":"26"},{"size":703,"mtime":1611518196827,"results":"35","hashOfConfig":"26"},{"size":2481,"mtime":1611518694572,"results":"36","hashOfConfig":"26"},{"size":2604,"mtime":1611409711663,"results":"37","hashOfConfig":"26"},{"size":364,"mtime":1611406291180,"results":"38","hashOfConfig":"26"},{"size":1054,"mtime":1611409443964,"results":"39","hashOfConfig":"26"},{"size":1521,"mtime":1611601068099,"results":"40","hashOfConfig":"26"},{"size":682,"mtime":1611520025405,"results":"41","hashOfConfig":"26"},{"size":2260,"mtime":1611518940762,"results":"42","hashOfConfig":"26"},{"size":2770,"mtime":1611519808795,"results":"43","hashOfConfig":"26"},{"size":399,"mtime":1611411152089,"results":"44","hashOfConfig":"26"},{"size":1158,"mtime":1611411054241,"results":"45","hashOfConfig":"26"},{"size":1315,"mtime":1611518482076,"results":"46","hashOfConfig":"26"},{"size":336,"mtime":1611412615522,"results":"47","hashOfConfig":"26"},{"size":960,"mtime":1611412600038,"results":"48","hashOfConfig":"26"},{"size":1177,"mtime":1611593972603,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1k92agf",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/index.js",["105","106"],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/server.js",["107"],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/config.js",[],["108","109"],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/config/mongo.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/users/users.router.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/auth/auth.router.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/auth/auth.controller.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/users/users.controller.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/users/users.model.js",["110","111"],"const mongoose = require('mongoose');\n\n// Define model schema\nconst userModelSchema = mongoose.Schema({\n    email:String,\n    password: String,\n    lastname: String,\n    name: String,   \n    phone:Int,\n    address:String,\n    postalcode:Int,\n    users_id: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'UserModel',\n    },\n  });\n\n  // Compile model from schema\nconst User = mongoose.model('UserModel', userModelSchema);\n\nconst create = (user) => {\n  User.create(user, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Created Docs : ', docs);\n    }\n  });\n};\n\nconst getAll = async () => {\n  return await User.find();\n};\n\nconst getOne = async (id) => {\n  let query = { _id: id };\n  return await User.findOne(query);\n};\n\nconst getByEmail = async (email) => {\n  let query = { email: email };\n  return await User.findOne(query);\n};\n\nconst update = (id, updateduser) => {\n  let query = { _id: id };\n  User.updateOne(query, updateduser, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Updated Docs : ', docs);\n    }\n  });\n};\n\nconst remove = (id) => {\n  let query = { _id: id };\n  User.deleteOne(query, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Deleted Doc : ', docs);\n    }\n  });\n};\n\nmodule.exports = {\n  create,\n  getAll,\n  getOne,\n  getByEmail,\n  update,\n  remove\n};","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/categories/categories.router.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/categories/categories.controller.js",["112","113","114","115","116"],"const categoryModel = require('./categories.model');\n\n//Categories\n  const createCategory = (req, res) => {\n    const newcategory = req.body;\n    const categoriesUpdated = categoryModel.createCategory(newcategory);\n    return res.status(201).json(categoriesUpdated);\n  };\n\n  const getAllCategories = async (req, res) => {\n    const categories = await categoryModel.getAllCategories();\n    return res.status(200).json(categories);\n  };\n  \n  const getOneCategory = async (req, res) => {\n    const category = await categoryModel.getOneCategories(req.params.id);\n    if (category) {\n      return res.status(200).json(category);\n    }\n    return res.status(404).end();\n  };\n  \n  const updateCategory = (req, res) => {\n    const updatedcategory = req.body;\n    const categoriesUpdated = categoryModel.updateCategory(req.params.id, updatedcategory);\n    return res.status(200).json(categoriesUpdated);\n  };\n  \n  const removeCategory = (req, res) => {\n    const categoriesWithoutTheDeleted = categoryModel.removeCategory(req.params.id);\n    return res.status(200).json(categoriesWithoutTheDeleted);\n  };\n\n//Subcategories\n  const createSubcategory = (req, res) => {\n    const newsubcategory = req.body;\n    const subcategoriesUpdated = subcategoryModel.createSubcategory(newsubcategory);\n    return res.status(201).json(subcategoriesUpdated);\n  };\n\n  const getAllSubcategories = async (req, res) => {\n    const subcategories = await subcategoryModel.getAllSubcategories();\n    return res.status(200).json(subcategories);\n  };\n  \n  const getOneSubcategory = async (req, res) => {\n    const subcategory = await subcategoryModel.getOneSubcategories(req.params.id);\n    if (subcategory) {\n      return res.status(200).json(subcategory);\n    }\n    return res.status(404).end();\n  };\n  \n  const updateSubcategory = (req, res) => {\n    const updatedsubcategory = req.body;\n    const subcategoriesUpdated = subcategoryModel.updateSubcategory(req.params.id, updatedsubcategory);\n    return res.status(200).json(subcategoriesUpdated);\n  };\n  \n  const removeSubcategory = (req, res) => {\n    const subcategoriesWithoutTheDeleted = subcategoryModel.removeSubcategory(req.params.id);\n    return res.status(200).json(subcategoriesWithoutTheDeleted);\n  };  \n  \n  module.exports = {\n    createCategory,\n    getAllCategories,\n    getOneCategory,\n    updateCategory,\n    removeCategory,\n    createSubcategory,\n    getAllSubcategories,\n    getOneSubcategory,\n    updateSubcategory,\n    removeSubcategory,\n  };","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/categories/categories.model.js",["117","118"],"const mongoose = require('mongoose');\n\n// Define model schema 1/2\nconst categoryModelSchema = mongoose.Schema({\n    name:String,\n  });\n\n  // Compile model from schema 1/2\n  const Category = mongoose.model('CategoryModel', categoryModelSchema);\n\n// Define model schema 2/2\nconst subcategoryModelSchema = mongoose.Schema({\n    name:String,\n    categories_id: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'CategoryModel',\n    },\n  });  \n\n    // Compile model from schema 2/2\n  const Subcategory = mongoose.model('SubcategoryModel', subcategoryModelSchema);\n\n// CategoryModel's methods\nconst createCategory = (category) => {\n  Category.create(category, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Created Docs : ', docs);\n    }\n  });\n};\n\nconst getAllCategories = async () => {\n  return await Category.find();\n};\n\nconst getOneCategory = async (id) => {\n  let query = { _id: id };\n  return await User.findOne(query);\n};\n\nconst updateCategory = (id, updatedcategory) => {\n  let query = { _id: id };\n  Category.updateOne(query, updatedcategory, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Updated Docs : ', docs);\n    }\n  });\n};\n\nconst removeCategory = (id) => {\n  let query = { _id: id };\n  Category.deleteOne(query, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Deleted Doc : ', docs);\n    }\n  });\n};\n\n// SubcategoryModel's methods\nconst createSubcategory = (subcategory) => {\n  Subcategory.create(subcategory, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Created Docs : ', docs);\n    }\n  });\n};\n\nconst getAllSubcategories = async () => {\n  return await Category.find();\n};\n\nconst getOneSubcategory = async (id) => {\n  let query = { _id: id };\n  return await User.findOne(query);\n};\n\nconst updateSubcategory = (id, updatedsubcategory) => {\n  let query = { _id: id };\n  Subcategory.updateOne(query, updatedsubcategory, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Updated Docs : ', docs);\n    }\n  });\n};\n\nconst removeSubcategory = (id) => {\n  let query = { _id: id };\n  Subcategory.deleteOne(query, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Deleted Doc : ', docs);\n    }\n  });\n};\n\nmodule.exports = {\n  createCategory,\n  getAllCategories,\n  getOneCategory,\n  updateCategory,\n  removeCategory,\n  createSubcategory,\n  getAllSubcategories,\n  getOneSubcategory,\n  updateSubcategory,\n  removeSubcategory,\n};",["119","120"],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/products/products.router.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/products/products.controller.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/products/products.model.js",["121","122"],"const mongoose = require('mongoose');\n\n// Define model schema\nconst productModelSchema = mongoose.Schema({\n    name: String,\n    description: String,\n    price: Float,\n    discount: Float,\n    email:String,\n    status:String,\n    tags_id: [\n      {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'TagModel',\n      }\n    ],\n    users_id: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'UserModel',\n    },\n    product_subcategory_id: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'CategoryModel',\n    },\n  });\n\n// Compile model from schema\nconst Product = mongoose.model('ProductModel', productModelSchema);\n\nconst create = (product) => {\n  Product.create(product, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Created Docs : ', docs);\n    }\n  });\n};\n\nconst getAll = async () => {\n  return await Product.find();\n};\n\nconst getOne = async (id) => {\n  let query = { _id: id };\n  return await Product.findOne(query);\n};\n\nconst update = (id, updatedproduct) => {\n  let query = { _id: id };\n  Product.updateOne(query, updatedproduct, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Updated Docs : ', docs);\n    }\n  });\n};\n\nconst remove = (id) => {\n  let query = { _id: id };\n  Product.deleteOne(query, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Deleted Doc : ', docs);\n    }\n  });\n};\n\nmodule.exports = {\n  create,\n  getAll,\n  getOne,\n  update,\n  remove\n};","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/messages/messages.router.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/messages/messages.controller.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/messages/messages.model.js",["123","124","125","126"],"const mongoose = require('mongoose');\n\n// Define model schema 1/2\nconst messageModelSchema = mongoose.Schema({\n  subject:String,\n  message:String,\n  sender_users_id: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'UserModel',\n  },\n  receiver_users_id: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'UserModel',\n  },\n});\n\n// Compile model from schema 1/2\nconst Message = mongoose.model('MessageModel', categoryModelSchema);\n\n// Define model schema 2/2\nconst threadmessageModelSchema = mongoose.Schema({\n  message:String,\n  messages_id: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'MessageModel',\n  },\n});  \n\n  // Compile model from schema 2/2\nconst Threadmessage = mongoose.model('ThreadmessageModel', subcategoryModelSchema);\n\n//Messages's methods\nconst createMessage = (message) => {\n  Message.create(message, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Created Docs : ', docs);\n    }\n  });\n};\n\nconst getAllMessages = async () => {\n  return await Message.find();\n};\n\nconst getOneMessage = async (id) => {\n  let query = { _id: id };\n  return await Message.findOne(query);\n};\n\nconst updateMessage = (id, updatedmessage) => {\n  let query = { _id: id };\n  Message.updateOne(query, updatedmessage, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Updated Docs : ', docs);\n    }\n  });\n};\n\nconst removeMessage = (id) => {\n  let query = { _id: id };\n  Message.deleteOne(query, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Deleted Doc : ', docs);\n    }\n  });\n};\n\n//Threadmessages's methods\nconst createThreadmessage = (message) => {\n  Threadmessage.create(message, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Created Docs : ', docs);\n    }\n  });\n};\n\nconst getAllThreadmessages = async () => {\n  return await Threadmessage.find();\n};\n\nconst getOneThreadmessage = async (id) => {\n  let query = { _id: id };\n  return await Threadmessage.findOne(query);\n};\n\nconst updateThreadmessage = (id, updatedmessage) => {\n  let query = { _id: id };\n  Message.updateOne(query, updatedmessage, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Updated Docs : ', docs);\n    }\n  });\n};\n\nconst removeThreadmessage = (id) => {\n  let query = { _id: id };\n  Message.deleteOne(query, function (err, docs) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log('Deleted Doc : ', docs);\n    }\n  });\n};\n\nmodule.exports = {\n  createMessage,\n  getAllMessages,\n  getOneMessage,\n  updateMessage,\n  removeMessage,\n  createThreadmessage,\n  getAllThreadmessages,\n  getOneThreadmessage,\n  updateThreadmessage,\n  removeThreadmessage,\n};","/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/notifications/notifications.router.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/notifications/notifications.controller.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/notifications/notifications.model.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/tags/tags.router.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/tags/tags.controller.js",[],"/home/jorge/Documents/FSD1120/reuz/reuz-node/src/resources/tags/tags.model.js",[],{"ruleId":"127","severity":1,"message":"128","line":1,"column":9,"nodeType":"129","messageId":"130","endLine":1,"endColumn":14},{"ruleId":"131","severity":2,"message":"132","line":5,"column":1,"nodeType":"129","messageId":"133","endLine":5,"endColumn":5},{"ruleId":"127","severity":1,"message":"134","line":17,"column":7,"nodeType":"129","messageId":"130","endLine":17,"endColumn":12},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"131","severity":2,"message":"139","line":9,"column":11,"nodeType":"129","messageId":"133","endLine":9,"endColumn":14},{"ruleId":"131","severity":2,"message":"139","line":11,"column":16,"nodeType":"129","messageId":"133","endLine":11,"endColumn":19},{"ruleId":"131","severity":2,"message":"140","line":37,"column":34,"nodeType":"129","messageId":"133","endLine":37,"endColumn":50},{"ruleId":"131","severity":2,"message":"140","line":42,"column":33,"nodeType":"129","messageId":"133","endLine":42,"endColumn":49},{"ruleId":"131","severity":2,"message":"140","line":47,"column":31,"nodeType":"129","messageId":"133","endLine":47,"endColumn":47},{"ruleId":"131","severity":2,"message":"140","line":56,"column":34,"nodeType":"129","messageId":"133","endLine":56,"endColumn":50},{"ruleId":"131","severity":2,"message":"140","line":61,"column":44,"nodeType":"129","messageId":"133","endLine":61,"endColumn":60},{"ruleId":"131","severity":2,"message":"141","line":40,"column":16,"nodeType":"129","messageId":"133","endLine":40,"endColumn":20},{"ruleId":"131","severity":2,"message":"141","line":82,"column":16,"nodeType":"129","messageId":"133","endLine":82,"endColumn":20},{"ruleId":"135","replacedBy":"142"},{"ruleId":"137","replacedBy":"143"},{"ruleId":"131","severity":2,"message":"144","line":7,"column":12,"nodeType":"129","messageId":"133","endLine":7,"endColumn":17},{"ruleId":"131","severity":2,"message":"144","line":8,"column":15,"nodeType":"129","messageId":"133","endLine":8,"endColumn":20},{"ruleId":"127","severity":1,"message":"145","line":4,"column":7,"nodeType":"129","messageId":"130","endLine":4,"endColumn":25},{"ruleId":"131","severity":2,"message":"146","line":18,"column":48,"nodeType":"129","messageId":"133","endLine":18,"endColumn":67},{"ruleId":"127","severity":1,"message":"147","line":21,"column":7,"nodeType":"129","messageId":"130","endLine":21,"endColumn":31},{"ruleId":"131","severity":2,"message":"148","line":30,"column":60,"nodeType":"129","messageId":"133","endLine":30,"endColumn":82},"no-unused-vars","'start' is assigned a value but never used.","Identifier","unusedVar","no-undef","'star' is not defined.","undef","'mongo' is assigned a value but never used.","no-native-reassign",["149"],"no-negated-in-lhs",["150"],"'Int' is not defined.","'subcategoryModel' is not defined.","'User' is not defined.",["149"],["150"],"'Float' is not defined.","'messageModelSchema' is assigned a value but never used.","'categoryModelSchema' is not defined.","'threadmessageModelSchema' is assigned a value but never used.","'subcategoryModelSchema' is not defined.","no-global-assign","no-unsafe-negation"]